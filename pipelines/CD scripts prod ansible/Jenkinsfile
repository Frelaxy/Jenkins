pipeline {
    agent {
        label "mgmt"
    }
    parameters {
        string name: 'CUSTOMER', defaultValue: '', trim: true, description: "Please set customer."
        string name: 'ENVIRONMENT', defaultValue: '', trim: true, description: "Please set customer environment."
        string name: 'PROVIDER', defaultValue: '', trim: true, description: "Please set provider."
        string name: 'VERSION', defaultValue: '', trim: true, description: "Please set version."
        string name: 'DEPLOY_ID', defaultValue: BUILD_TIMESTAMP, trim: true, description: "Don't change please!"
    }
    environment {
        COMPONENT = "support"
        INVENTORY_DIR = "/home/active/mgmt/ansible/customers/$CUSTOMER/$ENVIRONMENT/$PROVIDER/ansible/inventory/"
        AP_CONFIG_FILE = "/home/active/mgmt/ansible/customers/$CUSTOMER/$ENVIRONMENT/$PROVIDER/ansible/inventory/group_vars/all/ap.yml"
        PYENV_VERSION = "3.8.3"
        PYENV_ROOT = "/home/active/.pyenv"
        PATH = "$PYENV_ROOT/bin:$PATH"
    }
    options {
        disableConcurrentBuilds()
        buildDiscarder logRotator(artifactDaysToKeepStr: '1', artifactNumToKeepStr: '', daysToKeepStr: '31', numToKeepStr: '')
    }
    stages {
        stage('Deploy scripts') {
            steps {
                print("INFO: Deploy - ${COMPONENT} scripts.")
                withCredentials([sshUserPrivateKey(credentialsId: ap_config['jenkins_deploy_credentials'], keyFileVariable: 'DEPLOY_KEY_PATH', usernameVariable: 'DEPLOY_USER')]) {
                    sh '''
                        set +x
                        eval "$(pyenv init -)"
                        set -x

                        ansible-playbook --private-key=${DEPLOY_KEY_PATH} --tags "sync_scripts" -i ${INVENTORY_DIR} -e "version=${VERSION} deploy_id=${DEPLOY_ID}" playbooks/${COMPONENT}.yml
                    '''
                }
            }
        }
    }
}
